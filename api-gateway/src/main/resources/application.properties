# Spring cloud config
spring.cloud.compatibility-verifier.enabled=false
spring.cloud.gateway.routes[0].id=customer_service_route
spring.cloud.gateway.routes[0].uri=http://${DOCKER_HOST:localhost}:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/customer/api/**, /customer/v3/api-docs
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/customer/api(?<segment>/?.*), /api${segment}
spring.cloud.gateway.routes[0].filters[1]=RewritePath=/customer/v3/api-docs(?<segment>/?.*), /v3/api-docs${segment}
spring.cloud.gateway.routes[1].id=account_service_route
spring.cloud.gateway.routes[1].uri=http://${DOCKER_HOST:localhost}:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/account/api/**, /account/v3/api-docs
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/account/api(?<segment>/?.*), /api${segment}
spring.cloud.gateway.routes[1].filters[1]=RewritePath=/account/v3/api-docs(?<segment>/?.*), /v3/api-docs${segment}
spring.cloud.gateway.routes[2].id=report_service_route
spring.cloud.gateway.routes[2].uri=http://${DOCKER_HOST:localhost}:8083
spring.cloud.gateway.routes[2].predicates[0]=Path=/report/api/**, /report/v3/api-docs
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/report/api(?<segment>/?.*), /api${segment}
spring.cloud.gateway.routes[2].filters[1]=RewritePath=/report/v3/api-docs(?<segment>/?.*), /v3/api-docs${segment}
spring.cloud.gateway.routes[3].id=loan_service_route
spring.cloud.gateway.routes[3].uri=http://${DOCKER_HOST:localhost}:8084
spring.cloud.gateway.routes[3].predicates[0]=Path=/loan/api/**, /loan/v3/api-docs
spring.cloud.gateway.routes[3].filters[0]=RewritePath=/loan/api(?<segment>/?.*), /api${segment}
spring.cloud.gateway.routes[3].filters[1]=RewritePath=/loan/v3/api-docs(?<segment>/?.*), /v3/api-docs${segment}
spring.cloud.gateway.routes[4].id=transaction_service_route
spring.cloud.gateway.routes[4].uri=http://${DOCKER_HOST:localhost}:8085
spring.cloud.gateway.routes[4].predicates[0]=Path=/transaction/api/**, /transaction/v3/api-docs
spring.cloud.gateway.routes[4].filters[0]=RewritePath=/transaction/api(?<segment>/?.*), /api${segment}
spring.cloud.gateway.routes[4].filters[1]=RewritePath=/transaction/v3/api-docs(?<segment>/?.*), /v3/api-docs${segment}
spring.cloud.gateway.routes[5].id=notification_service_route
spring.cloud.gateway.routes[5].uri=http://${DOCKER_HOST:localhost}:8086
spring.cloud.gateway.routes[5].predicates[0]=Path=/notification/api/**, /notification/v3/api-docs
spring.cloud.gateway.routes[5].filters[0]=RewritePath=/notification/api(?<segment>/?.*), /api${segment}
spring.cloud.gateway.routes[5].filters[1]=RewritePath=/notification/v3/api-docs(?<segment>/?.*), /v3/api-docs${segment}

# Swagger config
springdoc.webjars.prefix=
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operations-sorter=alpha
springdoc.swagger-ui.config-url=/v3/api-docs/swagger-config
springdoc.swagger-ui.urls[0].name=Customer Service
springdoc.swagger-ui.urls[0].url=/customer/v3/api-docs
springdoc.swagger-ui.urls[1].name=Account Service
springdoc.swagger-ui.urls[1].url=/account/v3/api-docs
springdoc.swagger-ui.urls[2].name=Reporting Service
springdoc.swagger-ui.urls[2].url=/report/v3/api-docs
springdoc.swagger-ui.urls[3].name=Loan Service
springdoc.swagger-ui.urls[3].url=/loan/v3/api-docs
springdoc.swagger-ui.urls[4].name=Transaction Service
springdoc.swagger-ui.urls[4].url=/transaction/v3/api-docs
springdoc.swagger-ui.urls[5].name=Notification Service
springdoc.swagger-ui.urls[5].url=/notification/v3/api-docs

# Application config
server.port=8080
logging.level.root=INFO
spring.messages.basename=i18n/messages
logging.file.name=log/api-gateway.log
logging.level.org.springframework.cloud.gateway=DEBUG
spring.application.name=api-gateway
spring.main.allow-bean-definition-overriding=true

# Zipkin config
spring.zipkin.sender.type=rabbit
spring.zipkin.baseUrl=http://${DOCKER_HOST:localhost}:9411
spring.sleuth.sampler.probability=1.0
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://${DOCKER_HOST:localhost}:9411/api/v2/spans

# Dubbo config
dubbo.application.name=api-gateway-service
dubbo.protocol.name=dubbo
dubbo.protocol.port=20880
dubbo.registry.address=zookeeper://${DOCKER_HOST:localhost}:2181


spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedOrigins=http://localhost:8000
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowCredentials=true


