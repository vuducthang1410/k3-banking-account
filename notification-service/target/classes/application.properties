spring.application.name=notification-service
server.port=8086
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/noti_db?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=123456
spring.jpa.hibernate.ddl-auto=update
#Gmail config
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=pham.ngoc.anh.thu872@gmail.com
spring.mail.password=pcrl tirw vcxg viud
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.protocols=TLSv1.2

#spring.mail.properties.mail.smtp.proxy.host=10.100.101.6
#spring.mail.properties.mail.smtp.proxy.port=8080

mail.proxy.enabled=true
#Swagger config
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui/index.html

# Dubbo config
dubbo.application.name=notification-service
dubbo.protocol.name=dubbo
dubbo.protocol.port=20886
dubbo.registry.address=zookeeper://${DOCKER_HOST:localhost}:2181

#Thymeleaf config
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

sms.service.url=http://${SMS_SERVICE:localhost}:7000/api/v1
sms.service.sender.phone=0899332074
# RabbitMQ config
spring.rabbitmq.host=${DOCKER_HOST:localhost}
spring.rabbitmq.port=5672
spring.rabbitmq.username=${RABBITMQ_USER:root}
spring.rabbitmq.password=${RABBITMQ_PASS:12345}
## RabbitMQ producer
#rabbitmq.queue.trans=loan_payment_reminder_queue
#rabbitmq.exchange.name=loan_exchange
#rabbitmq.routing.key=rabbitmq_core_routing_key
## RabbitMQ consumer
rabbitmq.queue.consumer.transaction.suspicious=transaction_suspicious_queue
rabbitmq.queue.consumer.customer.welcome=welcome_customer_queue
rabbitmq.queue.consumer.customer.update=update_customer_queue
rabbitmq.queue.consumer.account.create.savings=create_account_savings_queue
rabbitmq.queue.consumer.account.create.payment=create_account_payment_queue
rabbitmq.queue.consumer.loan.create.account=create_account_loan_queue
rabbitmq.queue.consumer.loan.approval.success=approval_loan_success_queue
rabbitmq.queue.consumer.loan.approval.fail=approval_loan_fail_queue
rabbitmq.queue.consumer.loan.remind=remind_loan_queue
rabbitmq.queue.consumer.loan.completion=completion_loan_queue
rabbitmq.queue.consumer.loan.overdue_dept=overdue_dept_loan_queue
rabbitmq.queue.consumer.loan.disbursement.fail=disbursement_fail_loan_queue
rabbitmq.queue.consumer.loan.disbursement.success=disbursement_success_loan_queue
rabbitmq.queue.consumer.loan.payment.success=payment_success_loan_queue

# Zipkin config
spring.zipkin.sender.type=rabbit
spring.zipkin.baseUrl=http://${DOCKER_HOST:localhost}:9411
spring.sleuth.sampler.probability=1.0
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://${DOCKER_HOST:localhost}:9411/api/v2/spans

