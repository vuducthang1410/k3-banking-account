# Database connection
spring.sql.init.platform=mysql
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/transaction_db}?createDatabaseIfNotExist=true
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:123456}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA config
spring.jpa.database-platform=MYSQL
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Swagger config
springdoc.swagger-ui.path=/swagger
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operations-sorter=alpha

# Application config
server.port=8085
spring.messages.basename=i18n/messages
logging.file.name=log/transaction-service.log
spring.application.name=transaction-service
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
url.bank.api=https://api.vietqr.io/v2/banks
firebase.image.base.url=https://firebasestorage.googleapis.com/v0/b/upload-file-2ac29.appspot.com/o/%s?alt=media

# Redis config
spring.cache.type=redis
spring.data.redis.port=6379
spring.data.redis.password=12345
spring.data.redis.host=${DOCKER_HOST:localhost}
spring.cache.redis.time-to-live=60000
spring.cache.redis.cache-null-values=true

# Zipkin config
spring.zipkin.sender.type=rabbit
spring.zipkin.baseUrl=http://${DOCKER_HOST:localhost}:9411
spring.sleuth.sampler.probability=1.0
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://${DOCKER_HOST:localhost}:9411/api/v2/spans

# Vault config
spring.cloud.vault.kv.enabled=true
spring.cloud.vault.authentication=TOKEN
spring.cloud.vault.token=0000
spring.cloud.vault.scheme=http
spring.cloud.vault.host=${DOCKER_HOST:localhost}
spring.cloud.vault.port=8200
spring.config.import=vault://

# Dubbo config
dubbo.application.name=transaction-service
dubbo.protocol.name=dubbo
dubbo.protocol.port=20885
dubbo.registry.address=zookeeper://${DOCKER_HOST:localhost}:2181
dubbo.application.qos-port=33333

dubbo.provider.delay=-1
dubbo.provider.export=true

dubbo.consumer.check=false
dubbo.consumer.lazy=true
# Feign config
spring.cloud.openfeign.okhttp.enabled=true
core.banking.service.url=http://${CORE_SERVICE:localhost}:8090/api/v1
napas.service.url=http://${NAPAS_SERVICE:localhost}:8091/api/v1

# Proxy config
network.proxy.host=10.100.101.6
network.proxy.port=8080

# RabbitMQ config
spring.rabbitmq.host=${DOCKER_HOST:localhost}
spring.rabbitmq.port=5672
spring.rabbitmq.username=${RABBITMQ_USER:root}
spring.rabbitmq.password=${RABBITMQ_PASS:12345}
## RabbitMQ producer
rabbitmq.queue.name=suspicious_trans_queue
rabbitmq.exchange.name=trans_exchange
rabbitmq.routing.key=suspicious_trans_routing_key

